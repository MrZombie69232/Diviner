c****************************************************************************
c PROGRAM: pextract
c
c PURPOSE: Creates a subset of an irtm dataset by extracting only the columns
c          that the user specifies.
c
c REQUIRED KEYWORDS:
c
c   extract=char,char,char, ...  -- The user indicates which columns of data should
c                                   be passed down the pipe with this keyword.
c                                   For example, to retrieve just the julian date and
c                                   albedo, type extract=jdate,albedo .
c
c OPTIONAL KEYWORDS:
c
c   des=char -- The descriptor file to describe the format and the fields
c               of each record of the input data (default is previous pipe).
c
c newdes=char -- Specifying a filename here will cause the the brand new descriptor
c                file to be created in your filesystem.  This has no effect, however,
c                on whether it is also passed down the pipe (see next entry).
c
c     nodes  -- This will prevent the <new> descriptor file from being passed down
c               the pipe.
c
c                                                      Mark Sullivan
c                                                      October 25, 1993
c
c****************************************************************************

        program pextract
        implicit none
        include 'pipe1.inc'

        integer MAXARG
        parameter (MAXARG=2048)
  
        integer i,j,ifound,iunit,ndeslines,ios
        character*80 desfile
        character*8000 arg,key

        character*80 newdesfile
        character*48 newcdesstitle(MAXCOL)
        character*132 newcdesltitle(MAXCOL)
        integer newndeslines
        
        character*48 param(MAXCOL)
        integer colnum(MAXCOL)
        integer narg,done

        character cjunk

        real*8  newrdat(MAXCOL)
        integer irecord

c
c check for descriptor file in command line
c
        call getcmdchar('des',1,'optional',ifound, desfile)
        if( ifound .eq. 1 ) then
                iunit=7
        else
                iunit=5
        endif
        call pdesread(iunit, desfile, cdesheader,
     &               cdesstitle,  cdesltitle,
     &               ndeslines)


c
c retrieve all the column names that the user wants extracted


c
        do i=1,iargc()
           call getarg(i,arg)
           call getparam(arg,key)
           !write(0,*) 'i arg key: ',i,arg,key
           if(key.eq.'extract') then
              call getnumval(arg,narg)
              call getcharval(arg,param)
              !write(0,*) 'arg: ',arg
              !write(0,*) 'narg: ',narg
              !write(0,*) 'param: ',param
              goto 5
           endif
           stop 'pextract error: extract= keyword is missing'
        enddo

c
c match them with their corresponding column numbers in descriptor file
c

5       if(narg.gt.ndeslines) then
           write(0,*) 'ERROR in pextract: Trying to extract',
     &                narg,' values from a ',ndeslines,'-value dataset'
           call exit()
        endif

        done = 0

       do j=1,narg
            do i=1,ndeslines
              if(param(j).eq.cdesstitle(i)) then
                 colnum(j) = i ! REFERS TO THE OLD DESCRIPTOR FILE
                 newcdesstitle(j) = cdesstitle(i)
                 newcdesltitle(j) = cdesltitle(i)
                 done = done + 1
                 if(done.eq.narg) goto 10
                 goto 8
              endif
           enddo
c at this point, it can't find the new column in the old descriptor file
                 write (0,*)  
     & 'error in pextract: extracted column ',param(j),
     & ' not present in descriptor file'
                 stop
 8        enddo

10      newndeslines = narg 

        cdesheader='Descripter file auto-generated by pipes'


c
c check for 'newdes' in command line
c

        call getcmdchar('newdes',1,'optional',ifound, newdesfile)

        if(ifound.eq.1) then
           open (unit=10,file=newdesfile,status='unknown')
           call wdesfil(10, cdesheader,
     &                     newcdesstitle,newcdesltitle,newndeslines)
           close(unit=10)
        endif

        close(unit=10)


c
c check for 'nodes' in command line 
c


        call getcmdchar('nodes',0,'optional',ifound, cjunk)
        if (ifound.eq.0) then
          call pdeswrite(6, newdesfile, cdesheader,
     &               newcdesstitle,  newcdesltitle,
     &          newndeslines)
        endif

c add "sort" to list of valid commands
        call chkcmdkey('extract')
c
c check for bogusand line inputs

        call chkcmdkey ('bogus')


c READ IN THE DATA AND OUTPUT IN THE CORRECT FORMAT.
c
500     ios = read5(rdat, ndeslines)
        irecord=irecord+1
        if(ios.eq.-1) goto 1000

        do i=1,newndeslines
           newrdat(i) = rdat(colnum(i))
        enddo

c        write (0,*) 'writing record ',irecord,newdeslines
        ios = write6(newrdat, newndeslines)

        goto 500

c
c CLOSE INPUT FILE.
c


1000    ios = close5()


        STOP !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        end



